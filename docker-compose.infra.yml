# file: docker-compose.infra.yml

networks:
  tgb-net:
    driver: bridge

services:
  # --- Common Infrastructure Services ---
  redis:
    image: redis:7-alpine
    container_name: tgb-local-redis
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis-db:/data
    restart: always
    networks:
      - tgb-net

  # --- MLOps Orchestration & Tracking ---
  zenml-server:
    image: zenmldocker/zenml-server:0.83.1
    container_name: tgb-local-zenml
    ports:
      - "127.0.0.1:8237:8080"
    volumes:
      - zenml-data:/app/zenml
      - ./volumes/rag-source-docs:/rag-source-docs
    restart: always
    networks:
      - tgb-net

  # --- Vector Database Services ---
  qdrant:
    image: qdrant/qdrant:v1.9.2
    container_name: tgb-local-qdrant
    ports:
      - "127.0.0.1:6333:6333"
    volumes:
      - qdrant-data:/qdrant/storage
    profiles:
      - qdrant
    restart: always
    networks:
      - tgb-net

  chroma:
    image: ghcr.io/chroma-core/chroma:1.0.13
    container_name: tgb-local-chroma
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - chroma-data:/chroma/.chroma/index
    environment:
      - IS_PERSISTENT=TRUE
    profiles:
      - chroma
    restart: always
    networks:
      - tgb-net
      
  # --- LLM Inference Server (llama.cpp) ---
  llm-server:
    # --- [FIX] Indentation corrected for all service properties ---
    image: ghcr.io/ggerganov/llama.cpp:server-cuda
    #docker pull ghcr.io/ggerganov/llama.cpp:server-cuda
    container_name: tgb-local-llm-server
    volumes:
      - ./services/a-rag/model_data:/models
    ports:
      - "127.0.0.1:8080:8080"
    
    # Using the modern and recommended way to request GPU access.
    # This will work once the NVIDIA Container Toolkit is correctly configured.
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    
    command: >
      -m /models/llms/mistral-7b-instruct-v0.2.Q4_K_M.gguf
      -c 4096
      --host 0.0.0.0
      --port 8080
      -ngl 999
      --cont-batching
      --batch-size 512
    
    profiles:
      - qdrant
    restart: always
    networks:
      - tgb-net

volumes:
  redis-db:
  zenml-data:
  qdrant-data:
  chroma-data: